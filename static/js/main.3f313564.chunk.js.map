{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PokemonRow","poki","onSelect","name","english","type","join","Button","variant","color","onClick","PokemonInfo","base","Object","keys","map","key","Title","styled","h1","TwoColumnLayout","div","Container","Input","input","App","React","useState","filter","setFilter","pokemon","setPokemon","selectedItem","setSelectedItem","useEffect","fetch","then","resp","json","data","value","onChange","event","target","toLowerCase","width","includes","slice","index","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"2RAOMA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACjB,+BACE,6BAAKD,EAAKE,KAAKC,UACf,6BAAKH,EAAKI,KAAKC,KAAK,QACpB,6BACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,kBAAMR,EAASD,IAApE,0BAgBAU,EAAc,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAMS,EAAT,EAASA,KAAT,OAClB,gCACE,6BAAKT,EAAKC,UACV,gCAEIS,OAAOC,KAAKF,GAAMG,KAAI,SAAAC,GAAG,OACvB,gCACE,+BACE,6BAAKA,IACL,6BAAKJ,EAAKI,SAHFA,YA0BhBC,EAAQC,IAAOC,GAAV,mDAILC,EAAkBF,IAAOG,IAAV,2GAMfC,EAAYJ,IAAOG,IAAV,oFAMTE,EAAQL,IAAOM,MAAV,uFA+CIC,MAzCf,WAAgB,IAAD,EACeC,IAAMC,SAAS,IAD9B,mBACNC,EADM,KACEC,EADF,OAEiBH,IAAMC,SAAS,IAFhC,mBAENG,EAFM,KAEGC,EAFH,OAG2BL,IAAMC,SAAS,MAH1C,mBAGNK,EAHM,KAGQC,EAHR,KAWb,OANAP,IAAMQ,WAAU,WACdC,MAAM,qDACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIR,EAAWQ,QAC1B,IAGD,eAACjB,EAAD,WACE,cAACL,EAAD,6BACA,cAACM,EAAD,CAAOlB,KAAK,OAAOmC,MAAOZ,EAAQa,SAAU,SAAAC,GAAK,OAAIb,EAAUa,EAAMC,OAAOH,MAAMI,kBAClF,eAACxB,EAAD,WACE,8BACE,wBAAOyB,MAAM,OAAb,UACE,gCACE,+BACE,yCACA,4CAGJ,gCACGf,EACEF,QAAO,SAAAE,GAAO,OAAIA,EAAQ3B,KAAKC,QAAQwC,cAAcE,SAASlB,MAC9DmB,MAAM,EAAG,IACThC,KAAI,SAACd,EAAM+C,GAAP,OACH,cAAC,EAAD,CAAY/C,KAAMA,EAA4BC,SAAU,SAAAD,GAAI,OAAIgC,EAAgBhC,KAAnDA,EAAKgD,GAAKD,aAMhDhB,GAAgB,cAAC,EAAD,eAAiBA,WCzG3BkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3f313564.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { Button } from '@material-ui/core';\n\n// components\nconst PokemonRow = ({ poki, onSelect }) => (\n  <tr>\n    <td>{poki.name.english}</td>\n    <td>{poki.type.join(\", \")}</td>\n    <td>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => onSelect(poki)}>Select</Button>\n    </td>\n  </tr>\n);\n\n// propTypes\nPokemonRow.propTypes = {\n  pokemon: PropTypes.shape({\n    name: PropTypes.shape({\n      english: PropTypes.string.isRequired\n    }),\n    type: PropTypes.arrayOf(PropTypes.string.isRequired),\n    onSelect: PropTypes.func.isRequired\n  })\n};\n\nconst PokemonInfo = ({ name, base }) => (\n  <div>\n    <h1>{name.english}</h1>\n    <table>\n      {\n        Object.keys(base).map(key => (\n          <tbody key={key}>\n            <tr>\n              <td>{key}</td>\n              <td>{base[key]}</td>\n            </tr>\n          </tbody>\n        ))\n      }\n    </table>\n  </div>\n);\n\nPokemonInfo.propTypes = {\n  name: PropTypes.shape({\n    english: PropTypes.string.isRequired\n  }),\n  base: PropTypes.shape({\n    HP: PropTypes.number.isRequired,\n    Attack: PropTypes.number.isRequired,\n    Defense: PropTypes.number.isRequired,\n    \"Sp. Attack\": PropTypes.number.isRequired,\n    \"Sp. Defense\": PropTypes.number.isRequired,\n    Speed: PropTypes.number.isRequired\n  })\n};\n\nconst Title = styled.h1`\n\ttext-align: center;\n`;\n\nconst TwoColumnLayout = styled.div`\n  display: grid;\n  grid-template-columns: 70% 30%;\n  grid-column-gap: 1rem;\n`;\n\nconst Container = styled.div`\n  margin: auto;\n  width: 800px;\n  padding-top: 1rem;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n\tfont-size: x-large;\n\tpadding: 0.2rem;\n`;\n\nfunction App() {\n  const [filter, setFilter] = React.useState('');\n  const [pokemon, setPokemon] = React.useState([]);\n  const [selectedItem, setSelectedItem] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch('http://localhost:3000/starting-react/pokemon.json')\n      .then(resp => resp.json())\n      .then(data => setPokemon(data));\n  }, []);\n\n  return (\n    <Container>\n      <Title>Pokemon Search</Title>\n      <Input type=\"text\" value={filter} onChange={event => setFilter(event.target.value.toLowerCase())} />\n      <TwoColumnLayout>\n        <div>\n          <table width='100%'>\n            <thead>\n              <tr>\n                <th>Pokemon</th>\n                <th>Power</th>\n              </tr>\n            </thead>\n            <tbody>\n              {pokemon\n                .filter(pokemon => pokemon.name.english.toLowerCase().includes(filter))\n                .slice(0, 15)\n                .map((poki, index) => (\n                  <PokemonRow poki={poki} key={poki.id + index} onSelect={poki => setSelectedItem(poki)}>\n                  </PokemonRow>\n                ))}\n            </tbody>\n          </table>\n        </div>\n        {selectedItem && <PokemonInfo {...selectedItem} />}\n      </TwoColumnLayout>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from '@material-ui/core';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}